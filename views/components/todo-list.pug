extends component.pug
append content
    label.ui.header Todo list
    .ui.list
    .ui.input
        input(placeholder='add new item here')
        button.ui.button 
            i.plus.icon
            | new item
    .ui.statistics
        .statistic.complete
            .label
            .value
        .statistic.total
            .label
            .value
        .statistic.percent
            .label
            .value
append script
    . 
        import Store from '/js/store.mjs';
        import Component from '/js/component.mjs';
        import { store, state, addItem, markItem, removeItem } from '/js/todo-list.mjs';

        const list = new Component({store, element: root.querySelector('.ui.list')});
        list.render = function () {
            return state.items.map(
                item=>'.item' +
                      '\n i.icon.outline.square' + (item.checked ? '.check' : '') +
                      '\n div.content' + (item.checked ? '(style="text-decoration: line-through") ' : ' ') + item.label +
                      '\n   i.x.icon'
            ).join('\n');
        }
        list.bindings = function () {
            this.element.querySelectorAll('.item').forEach((node, i)=>{
                let id = state.items[i].id;
                node.querySelector('.square').onclick = ()=>markItem(id);
                node.querySelector('.x').onclick = ()=>removeItem(id);
            });
        }

        const complete = new Component({store, element: root.querySelector('.statistics .complete')})
        complete.render = () => '.label Completed' + '\n.value ' + state.items.filter(item=>item.checked).length
        const total = new Component({store, element: root.querySelector('.statistics .total')})
        total.render = () => '.label Total' + '\n.value ' + state.items.length
        const percent = new Component({store, element: root.querySelector('.statistics .percent')})
        percent.render = function () {
            let total = state.items.length;
            let complete = state.items.filter(item=>item.checked).length;
            let ratio = (Math.floor(0.5 + 100 * complete/total) || 0) + '%'
            return '.label Percent' + '\n.value ' + ratio;
        }
        const input = root.querySelector('input');
        const new_item = root.querySelector('button');

        new_item.onclick = ()=>{
            addItem({checked: false, label: input.value})
            input.value = '';
        }